// C# program to find length of longest consecutive 
// ones by at most one swap in a Binary String 
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO.Pipes;
using System.Linq;

class GFG
{

	// Function to calculate the length of the 
	// longest consecutive 1's 
	static List<int> maximum_one(List<int> A,List<int> B)
	{
		Dictionary<int, int> dica = new Dictionary<int,int>();
		

		for(int i=0;i<A.Count;i++)
		{
			if (!dica.ContainsKey(A[i]))
				dica.Add(A[i], 1);
			else
				dica[A[i]] = dica[A[i]] + 1;
		}
		List<int> ans = new List<int>();

		for(int i=0;i<B.Count;i++)
		{
			if (dica.ContainsKey(B[i]) && dica[B[i]]!=0)
			{
				ans.Add(B[i]);
				dica[B[i]] = dica[B[i]] - 1;
			}
		}

		
		






		return ans;
	}

	public static void Main()
	{

		List<int> a = new List<int>() { 1, 2, 2, 1 };
		List<int> b = new List<int>() { 2, 3, 1, 2 };
		maximum_one(a, b);


	}
}
// This code is contributed by inder_verma.. 
