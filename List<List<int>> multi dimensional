// C# implementation to find the longest 
// increasing odd even subsequence 
using System;
using System.Collections.Generic;

class GFG
{

	public static int soln(List<List<int>> items)
	{
		int T = 0;
		int B = items.Count - 1;
		int sum = 0, max = 0, value = 0; ;
		while(T<=B)
		{
			sum = 0;
			for(int i=0;i<=items[T].Count-1;i++)
			{
				sum += items[T][i];

			}
			if (max < sum)
			{
				max = sum;
				value = T;

			}
			T++;
		}

		return value;
	}

	// driver function 
	public static void Main()
	{


		List<List<int>> items = new List<List<int>>();
		List<int> a = new List<int>() { 0, 1, 1 };
		List<int> b = new List<int>() { 0, 0, 1 };
		List<int> c = new List<int>() { 0, 1, 1 };
		items.Add( a);
		items.Add(b);
		items.Add(c);

		soln(items);


		//int[,] arr2d = new int[3, 3]{
		//						{0, 1, 1},
		//						{0, 0, 1},
		//						{0, 1, 1}
		//					};

		//soln(arr2d);

		//int[,,] arr3d1 = new int[1, 2, 2]{
		//		{ { 1, 2}, { 3, 4} }
		//	};

		//int[,,] arr3d2 = new int[2, 2, 2]{
		//		{ {1, 2}, {3, 4} },
		//		{ {5, 6}, {7, 8} }
		//	};

		//int[,,] xc = new int[2, 2, 3]{
		//		{ { 1, 2, 3}, {4, 5, 6} },
		//		{ { 7, 8, 9}, {10, 11, 12} }
		//	};
	}
}
